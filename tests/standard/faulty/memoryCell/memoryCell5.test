Process Memory {
	r: BOOL; // the value we can read from the memory
    b0: BOOL; // the first bit
    b1: BOOL; // the second bit
    b2: BOOL; // the third bit
	b3: BOOL; // fourth but
	b4: BOOL; // fith bit
  
    
    Initial: b0 && b1 && b2 && b3 && b4 && r;
	
	[write1] true -> b0=true, b1=true, b2=true, b3=true, b4=true, r=true;// memory change accordingly
	[write0] true -> b0=false, b1=false, b2=false, b3=false, b4=false, r=false;// memory change accordingly
	
	[read0] !r -> r = r;
	[read1] r -> r = r;

	[fault1] faulty true -> b0=!b0, r=(!b0&&b1 &&b2)||(!b0&&b2&&b3)||(!b0&&b3&&b4)||(!b0&&b1&&b3)||(!b0&&b1&&b4)||(b1&&b3&&b4)||(b1&&b2&&b4)||(b2&&b3&&b4)||(b1&&b2&&b3)||(!b0&&b2&&b4); // a bit is changed, its a fault
	
	[fault2] faulty true -> b1=!b1, r=(b0&&!b1 &&b2)||(b0&&b2&&b3)||(b0&&b3&&b4)||(b0&&!b1&&b3)||(b0&&!b1&&b4)||(!b1&&b3&&b4)||(!b1&&b2&&b4)||(b2&&b3&&b4)||(!b1&&b2&&b3)||(b0&&b2&&b4); // similar to above
	
	[fault3] faulty true -> b2=!b2, r=(b0&&b1 &&!b2)||(b0&&!b2&&b3)||(b0&&b3&&b4)||(b0&&b1&&b3)||(b0&&b1&&b4)||(b1&&b3&&b4)||(b1&&!b2&&b4)||(!b2&&b3&&b4)||(b1&&!b2&&b3)||(b0&&!b2&&b4); // similar to above
    
    [fault4] faulty true -> b3=!b3, r=(b0&&b1 &&b2)||(b0&&b2&&!b3)||(b0&&!b3&&b4)||(b0&&b1&&!b3)||(b0&&b1&&b4)||(b1&&!b3&&b4)||(b1&&b2&&b4)||(b2&&!b3&&b4)||(b1&&b2&&!b3)||(b0&&b2&&b4);
    
	[fault5] faulty true -> b4=!b4, r=(b0&&b1 &&b2)||(b0&&b2&&b3)||(b0&&b3&&!b4)||(b0&&b1&&b3)||(b0&&b1&&!b4)||(b1&&b3&&!b4)||(b1&&b2&&!b4)||(b2&&b3&&!b4)||(b1&&b2&&b3)||(b0&&b2&&!b4);
       
}

Main(){
	m: Memory;
	run m();
}

